# -*- coding: utf-8 -*-
"""Threshold_maker.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VFmQHq-VdmcOLduNKxMAgv00Cm8RFpFB
"""

import os
import sys
from PIL import Image
import numpy as np
import imageio
import matplotlib.pyplot as plt
import cv2
import skimage.color
import skimage.io

"""File feliratok beállítása

Csatorna kiválasztása
"""

k = 1
# Cy5 1, DAPI 2, FITC 3


intensity = 0
backgroundTH = 0
brainTH = 0
short = ''

if k == 1:
  short = "Cy5"
if k == 2:
  short = "DAPI"
if k == 3:
  short = "FITC"

file_name = 'FF_X_366_31-36_'

filename = file_name + short +'-Q_Extended.tif'
print(filename)

"""Fileba írás

Képkonvertálás: tif -> jpg
"""

#konvertáló függvény

def convert(filename):
  if len(sys.argv) > 1:
      file = filename
      if os.path.exists(file):
          filename = file.split(".")
          img = Image.open(file)
          target_name = filename[0] + ".jpg"
          rgb_image = img.convert('RGB')
          rgb_image.save(target_name)
          print("Saved as " + target_name)
          return target_name
      else:
          print("No file error!")

target_name = convert(filename)

pic = imageio.imread(target_name)

"""**Hisztogram**"""

meann = int(pic.mean().round())

y, x, _ = plt.hist(pic.ravel(), 256, (meann, 256)) # mean rgb érték felett nézzük
plt.axvline(pic.mean(), color='k', linestyle='dashed', linewidth=1)

plt.show()

max_value = y.max() 
max_pos = x[np.where(y == max_value)]


intensity = int(max_pos.round()) + 20
print(intensity)